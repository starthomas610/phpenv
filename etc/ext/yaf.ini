
[yaf]
; The global library path, Yaf_loader will search global library in this directory.
;yaf.library=

; If there is only one part in PATH_INFO, should it consider as a controller or action.
; If this configure On, it will be considered as a Action name.
;yaf.action_prefer=0

; Whether lowercase all the path during the class autoloading.
;yaf.lowcase_path=0

; When this value is On, if Yaf_Loader can not find a class, it will return FALSE, then
; give chance to other auto load function to be called.
; When this value is Off, if Yaf_Loader can not find a class, it will return TRUE, and
; make the class autoloading failed immediately.
; Note:
; Yaf will register its loader during a instantiation of Yaf_Application, so any other
; auto loaders which is register before the instantiation will be called before
; Yaf_Loader::autoload().

; When this value is Off(default), Yaf_Loader::autoload() will always return TRUE.
;yaf.use_spl_autoload=0

; The max forward count, default is 5. that means you can have a max value of 5 in the
; forward stack.
; This is a protection for prevent recursive Yaf_Controller_Abstract::forward().
;yaf.forward_limit=5

; When this On, Yaf_Loader will identify a class by it's suffix to decide whether it
; is a MVC Class.
; When this Off, Yaf_Loader will look at the prefix of the class name.
;yaf.name_suffix=1

; When this is not empty, Yaf_Loader will identify the class suffix and string value
; of this.
; For example, when this value is "_", Yaf_Loader will take Index_Controller as a
; Controller Class, IndexController as a normal class.
;yaf.name_separator=""

; If this is On, and in the meantime you are using ini config file as the parameter
; of Yaf_Application(), the compiling result of the ini config file will be cached in
; the PHP process.
; Note:
; Yaf examine the mtime of the ini file, if it was changed since last compiling, Yaf
; will reload it.
; Warning
; Yaf use the ini file path as the cache entry key, so do use the absolute path in
; ini file path, otherwise there might be some conflicts if two application use the
; same relative path of ini config.
;yaf.cache_config=0

; This value is "product" by default, used for Yaf to fetch the config section of a
; ini config file.
; That is, if this value is "product", Yaf will use the section named "product" in
; the ini config file(the first parameter of the Yaf_Application) as the final config
; of the Yaf_Application.
;yaf.environ="product"

; Only works as of PHP 5.3, if this value is On, All classes of Yaf will named in
; namespace style. default 0
;yaf.use_namespace=1
